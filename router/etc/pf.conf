#	$OpenBSD: pf.conf,v 1.55 2017/12/03 20:40:04 sthen Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf

# TODO: ipleak.net shows my LAN address!

#block return	# block stateless traffic
#pass		# establish keep-state

# https://www.openbsd.org/faq/pf/example1.html

ext_if = "em0"
int_if = "em1"
#wifi  = "wlan0"
int_net = "172.16.207.0/24"

# Some info on wifi using EAP on linux:
# https://wiki.alpinelinux.org/wiki/FreeRadius_EAP-TLS_configuration
# https://wiki.alpinelinux.org/wiki/Linux_Router_with_VPN_on_a_Raspberry_Pi#WiFi_802.1x_EAP_and_FreeRadius
table <firewall> const { self }
table <martians> { 0.0.0.0/8 10.0.0.0/8 127.0.0.0/8 169.254.0.0/16     \
	 	   172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 224.0.0.0/3 \
	 	   198.18.0.0/15 198.51.100.0/24        \
	 	   203.0.113.0/24 }
table <locals> { 192.168.8.0/24 192.168.9.0/24 192.168.41.0/24 }

# TODO: This "martians" rule blocked other traffic from other friendly LANs.
#192.168.0.0/16

# TODO: unable to access Mullvad VPN from this LAN. Why?

set block-policy drop
#set loginterface egress
set loginterface $int_if
set skip on lo0
match in all scrub (no-df random-id max-mss 1440)
#match out on egress inet from !(egress:network) to any nat-to (egress:0)
# NAT
match out log on $ext_if inet from ($int_if:network) nat-to ($ext_if)
#antispoof quick for { egress $ext_if $wifi }
antispoof quick for { lo $int_if }
block log all
# TODO: This is in pf.conf man page example, but doesn't do what I expect
#block return in log quick on egress proto tcp from ! <locals> to egress port ssh
#block in quick on egress from <martians> to any
#block return out quick on egress from any to <martians>
# By default, do not permit remote connections to X11
block return in on ! lo0 proto tcp to port 6000:6010
# Port build user does not need network
block return out log proto {tcp udp} user _pbuild
#pass out quick inet
#pass in on { $ext_if $wifi } inet
#pass in on { $ext_if } inet
# Example port-forwarding to web server
#pass in on egress inet proto tcp from any to (egress) port { 80 443 } rdr-to 192.168.1.2
# Allow SSH from other subnets on the LAN. TODO: remove and use VPN IPs
#pass in log on egress proto tcp from <locals> to egress port ssh
# Allow SSH connections in on the external interface as long as
# they're NOT destined for the firewall (i.e., they're destined
# for a machine on the LAN.
#pass in log on egress proto tcp to ! <firewall> port ssh # synproxy state
pass out log on $ext_if proto { tcp, udp, icmp }

pass in log on $int_if proto tcp from $int_net to $int_if port ssh
pass out log on $int_if proto tcp from $int_if to port ssh

# DNS
pass in log on $int_if proto { tcp, udp } from $int_net to $int_if port { domain, bootps }

# PING
pass in log on $int_if proto icmp from $int_net
pass out log on $int_if proto icmp from $int_if to $int_net
